-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.dimcategories
(
    id serial NOT NULL,
    category_id integer NOT NULL,
    category_name character varying(25) COLLATE pg_catalog."default",
    description character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT dimcategories_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimcustomers
(
    id serial NOT NULL,
    customer_id integer NOT NULL,
    customer_name character varying(50) COLLATE pg_catalog."default",
    contact_name character varying(50) COLLATE pg_catalog."default",
    address character varying(50) COLLATE pg_catalog."default",
    city character varying(20) COLLATE pg_catalog."default",
    postal_code character varying(10) COLLATE pg_catalog."default",
    country character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT dimcustomer_pk PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimdate
(
    id integer NOT NULL,
    date timestamp without time zone NOT NULL,
    date_uk_format text COLLATE pg_catalog."default" NOT NULL,
    date_uk_short_format text COLLATE pg_catalog."default" NOT NULL,
    date_us_format text COLLATE pg_catalog."default" NOT NULL,
    date_us_short_format text COLLATE pg_catalog."default" NOT NULL,
    date_iso_format text COLLATE pg_catalog."default" NOT NULL,
    num_year integer NOT NULL,
    num_quarter_in_year integer NOT NULL,
    num_month_in_year integer NOT NULL,
    num_month_in_quarter integer NOT NULL,
    num_week_in_year integer NOT NULL,
    num_week_in_quarter integer NOT NULL,
    num_week_in_month integer NOT NULL,
    num_day_in_year integer NOT NULL,
    num_day_in_quarter integer NOT NULL,
    num_day_in_month integer NOT NULL,
    num_day_in_week integer NOT NULL,
    is_holiday_us boolean NOT NULL,
    name_month_en text COLLATE pg_catalog."default" NOT NULL,
    name_month_abbreviated_en text COLLATE pg_catalog."default" NOT NULL,
    name_day_en text COLLATE pg_catalog."default" NOT NULL,
    name_day_abbreviated_en text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT dimdate_pkey PRIMARY KEY (id),
    CONSTRAINT dimdate_date_key UNIQUE (date)
);

CREATE TABLE IF NOT EXISTS public.dimemployees
(
    id serial NOT NULL,
    employee_id integer NOT NULL,
    last_name character varying(15) COLLATE pg_catalog."default",
    first_name character varying(15) COLLATE pg_catalog."default",
    birth_date timestamp without time zone,
    photo character varying(25) COLLATE pg_catalog."default",
    notes character varying(1024) COLLATE pg_catalog."default",
    CONSTRAINT dimemployees_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimorderdetails
(
    id serial NOT NULL,
    order_detail_id integer NOT NULL,
    CONSTRAINT dimorder_details_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimorders
(
    id serial NOT NULL,
    order_id integer NOT NULL,
    CONSTRAINT dimorders_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimproducts
(
    id serial NOT NULL,
    product_id integer NOT NULL,
    product_name character varying(50) COLLATE pg_catalog."default",
    unit character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT dimproducts_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimshippers
(
    id serial NOT NULL,
    shipper_id integer NOT NULL,
    shipper_name character varying(25) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT dimshippers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.dimsuppliers
(
    id serial NOT NULL,
    supplier_id integer NOT NULL,
    supplier_name character varying(50) COLLATE pg_catalog."default",
    contact_name character varying(50) COLLATE pg_catalog."default",
    address character varying(50) COLLATE pg_catalog."default",
    city character varying(20) COLLATE pg_catalog."default",
    postal_code character varying(10) COLLATE pg_catalog."default",
    country character varying(15) COLLATE pg_catalog."default",
    phone character varying(15) COLLATE pg_catalog."default",
    CONSTRAINT dimsuppliers_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public."factProductOrderTransaction"
(
    id integer NOT NULL DEFAULT nextval('factordersales_id_seq'::regclass),
    order_id integer NOT NULL,
    order_detail_id integer,
    customer_id integer,
    employee_id integer,
    shipper_id integer,
    product_id integer,
    supplier_id integer,
    category_id integer,
    order_date timestamp without time zone NOT NULL,
    quantity integer,
    price numeric,
    CONSTRAINT factordersales_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.factordersales
(
    id integer NOT NULL,
    order_id integer NOT NULL,
    customer_id integer,
    category_id integer,
    order_date timestamp without time zone NOT NULL,
    sales bigint,
    CONSTRAINT factordersales_v2_pkey PRIMARY KEY (id)
);

ALTER TABLE IF EXISTS public.dimemployees
    ADD CONSTRAINT employee_birth_date_fk FOREIGN KEY (birth_date)
    REFERENCES public.dimdate (date) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_category_id_fk FOREIGN KEY (category_id)
    REFERENCES public.dimcategories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_employee_id_fk FOREIGN KEY (employee_id)
    REFERENCES public.dimemployees (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_order_detail_id_fk FOREIGN KEY (order_detail_id)
    REFERENCES public.dimorderdetails (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_order_id_fk FOREIGN KEY (order_id)
    REFERENCES public.dimorders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_product_id_fk FOREIGN KEY (product_id)
    REFERENCES public.dimproducts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_shipper_id_fk FOREIGN KEY (shipper_id)
    REFERENCES public.dimshippers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT fact_supplier_id_fk FOREIGN KEY (supplier_id)
    REFERENCES public.dimsuppliers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public."factProductOrderTransaction"
    ADD CONSTRAINT order_date_fk FOREIGN KEY (order_date)
    REFERENCES public.dimdate (date) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.factordersales
    ADD CONSTRAINT customer_id_2_fk FOREIGN KEY (customer_id)
    REFERENCES public.dimcustomers (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.factordersales
    ADD CONSTRAINT fact_category_id_2_fk FOREIGN KEY (category_id)
    REFERENCES public.dimcategories (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.factordersales
    ADD CONSTRAINT fact_order_date_fk_2 FOREIGN KEY (order_date)
    REFERENCES public.dimdate (date) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.factordersales
    ADD CONSTRAINT order_id_2_fk FOREIGN KEY (order_id)
    REFERENCES public.dimorders (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;